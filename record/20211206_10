////////////// 20211206 //////////////
  tptfs 文件在 GR 中的注册可以是 key-value 的形式，也就是说我们可以直接获取到文件对应的 inode 地址，而不再需要一步步解析路径。
所以，tptfs 无需再经过 vfs 层级进行访问

////////////// 20211207 //////////////
  /qihai/libkern/* 路径下会提供一组用于字符串操作的函数，用法类似于C库

  RAM 直接寻址：
    比如说我们有一个 16G 的 RAM，直接寻址就是它会在地址空间中占有 16G 这么大一块地方，然后上面的所有数据都可以通过一个地址来访问
  
  非直接寻址就可以类比磁盘的访问，我们可能把一个几百G或者上T的磁盘直接映射到地址空间，而是通过驱动程序、在指定的地址空间进行操作。
所以磁盘上的数据都不是直接寻址，而是通过磁盘控制器间接查找


////////////// 20211208 //////////////
  Operation not supported 错误信息可能是文件类型错误，或者属性错误，导致某些文件可能不支持一下操作，但还是执行了


////////////// 20211209 //////////////
  嵌入式系统设计中比较关注的两个点是运行速度和功耗，最求目标始终是尽可能低功耗、尽可能快的运行速度

  手机(其他设备应该也是类似的)内存子系统设计应该考虑总体设计，比如 3G 手机，它需要更加高速的总线、处理更多并发的任务；而 2G 手机则仅仅
需要一般速度的总线、处理的并发任务也比较少。那两者的设计方案肯定是不一样的
  当前计算机系统结构设计有一个缺陷，那就是系统通常是为一种典型的使用模型设计的。这种模型一旦被证明有可接受的性能，那就不会有很强的动力去
进一步优化。这也会导致芯片设计服务于广泛使用的系统结构，而不是针对特定的应用场景
  有研究表明，CPU 运行一个程序的时候，有90%的时间都在运行程序10%的代码。所以，内存子系统设计要把重点放在占用CPU最多时间的那一部分程序
子集上
  执行的简单性是高效使用内存的关键因素
  平衡XIP其实就是把传统的基于RAM的系统跟XIP进行组合，这里其实就用到了一个创新思想：组合创新。动态平衡 RAM 和 flash 上的数据类型和比例，
达到系统最佳性能
  很少使用的可执行代码可以以压缩的形式存放在 flash 当中，经常使用的代码可以在 flash 中就地执行以节省 RAM
  将一些常量迁移到高速 RAM 可以提高数据的吞吐量
  RAM 在电容中保存电荷，但是会随着时间的推移把电荷一点点漏掉。所以 CPU 就需要以固定的周期为这些电容充电，保证数据存储的准确性。如果在嵌入式
系统中保留一个非常大的 RAM，那系统在充电上的开销将会变得比较大，影响电池的使用时间。所以采用平衡XIP技术可以适当减少RAM大小，减少这部分导致的
损耗，但是设计过程中也要综合考虑成本、性能等等因素
