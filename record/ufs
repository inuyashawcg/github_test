>>>>>> vn_lock 之前
v_lock = {
  lock_object = {
    lo_name = 0x10d0bb171,
    lo_flags = 0x6fb0000,
    lo_data = 0x0,
    lo_witness = 0x0
  },
  lk_lock = 0x1,
  lk_exslpfail = 0x0,
  lk_timo = 0x6,
  lk_pri = 0x60
},
v_interlock = {
  lock_object = {
    lo_name = 0x10d10b53e,
    lo_flags = 0x1030000,
    lo_data = 0x0,
    lo_witness = 0x0
  },
  mtx_lock = 0x0
},

之后
v_lock = {
  lock_object = {
    lo_name = 0x10d0bb171,
    lo_flags = 0x6fb0000,
    lo_data = 0x0,
    lo_witness = 0x0
  },
  lk_lock = 0x21,
  lk_exslpfail = 0x0,
  lk_timo = 0x6,
  lk_pri = 0x60
},
v_interlock = {
  lock_object = {
    lo_name = 0x10d10b53e,
    lo_flags = 0x1030000,
    lo_data = 0x0,
    lo_witness = 0x0
  },
  mtx_lock = 0x0
},


>>>>>> lock flags compute 之前
  (gdb) p/x *cnp
  $12 = {
    cn_origflags = 0x2000000000,
    cn_flags = 0x1004442b,
    cn_thread = 0x1bfd8e680,
    cn_cred = 0xffffffd009424c00,
    cn_nameiop = 0x1,
    cn_lkflags = 0x200000,
    cn_pnbuf = 0xffffffd0093bdc00,
    cn_nameptr = 0xffffffd0093bdc00,
    cn_namelen = 0x1
  }

之后
  $14 = {
    cn_origflags = 0x20100d92e0,
    cn_flags = 0x1004442b,
    cn_thread = 0x1bfd3db80,
    cn_cred = 0xffffffd00935ba00,
    cn_nameiop = 0x1,
    cn_lkflags = 0x202000,
    cn_pnbuf = 0xffffffd0092ff800,
    cn_nameptr = 0xffffffd0092ff800,
    cn_namelen = 0x1
  }

>>>>>> 返回 namei 函数之后 ni_dvp
    v_lock = {
      lock_object = {
        lo_name = 0x10d0bb171,
        lo_flags = 0x6fb0000,
        lo_data = 0x0,
        lo_witness = 0x0
      },
      lk_lock = 0x1bfd8e680,
      lk_exslpfail = 0x0,
      lk_timo = 0x6,
      lk_pri = 0x60
    },
    v_interlock = {
      lock_object = {
        lo_name = 0x10d10b53e,
        lo_flags = 0x1030000,
        lo_data = 0x0,
        lo_witness = 0x0
      },
      mtx_lock = 0x0
    },
