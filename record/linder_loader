C语言创建步骤:
	编辑：就是创建和修改C程序的源代码-我们编写的程序称为源代码。
	编译：就是将源代码转换为机器语言。编译器的输出结果成为目标代码，存放它们的文件称为目标文件。扩展名为.o或者.obj。
		（该部分编译是指汇编器编译汇编语言或者编译器编译高级语言）
	链接：链接器将源代码由编译器产生的各种模块组合起来，再从C语言提供的程序库中添加必要的代码模块，将它们组成一个可执行的文件。在windows下扩展名为.exe，Unix下无扩展名。
	执行：运行程序

源代码 ——源文件就是存放程序代码的文件。通常我们编辑代码的文件就是源文件
	源代码相对目标代码和可执行代码而言的
	源代码就是用汇编语言和高级语言写出来的地代码

目标文件——指源代码经过编译程序产生的能被cpu直接识别二进制代码(机器代码 + 运行时数据)
	目标代码指计算机科学中编译器或汇编器处理源代码后所生成的代码，它一般由机器代码或接近于机器语言的代码组成
	目标文件包括着机器代码（可直接被计算机中央处理器履行）和代码在运行时使用的数据，如重定位信息，如用于链接或调试的程序符号（变量和函数的名字），另外还包括其他调试信息


////////////////
Linker
	链接器是一个将编译器产生的目标文件打包成可执行文件或者库文件或者目标文件的程序；链接器本质上也是一个程序，本质上和我们经常使用的普通程序没什么不同
	链接器的输入是编译器编译好的目标文件；链接器在将目标文件打包处理后，生成或者可执行文件，或者库，或者目标文件
	链接器可操作的最小元素是一个简单的目标文件，通常我们写的.c源文件编译后就生成了对应的目标文件(linux中的.o文件，Windows中的.obj文件)

功能组成:
	符号决议: 程序中的所有模块基本上都需要用到其他模块提供的接口，也就是模块间的依赖。linker的其中一项任务就是要确保提供给链接器进行连接的目标文件集合之间的依赖是成立的。		   也就是说，不会出现被依赖的模块中链接器找不到需要的接口
	可执行程序的生成: 链接器会首先将程序每个模块当中目标文件集合链接成库，然后再将各个库进行链接最终形成可执行程序
	重定位