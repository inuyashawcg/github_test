搞清楚Linux系统的总线，驱动跟设备之间的关系是什么样的，可以从一下方面入手分析:
linux总线是分级的，直接跟CPU打交道的是可能仅仅只有一种总线类型（PCI），然后其他类型的总线或者设备通过类似于桥类型的一种功能模块统一跟PCI进行数据交互。但是嵌入式可能跟PC的机制是不同的，嵌入式有可能是某些设备直接跟CPU打交道的？
设备的挂载，驱动的注册


驱动程序可以通过KLD命令进行动态加载

FreeBSD的makefile文件进行了简化，会包含有 .include <bsd.kmod.mk> 

FreeBSD中舍弃了Block Device驱动，原因参考FreeBSD Architecture Handbook:
内核通常会给块设备程序提供一个缓存来进行操作，缓存会对写入操作的结果进行重新排序，这会使得应用程序无法实时感知磁盘通的数据。这也会导致磁盘一旦发生crash，数据恢复将变得非常困难。所以FreeBSD采取的措施就是直接舍弃块设备驱动，直接都改为字符设备

网络设备驱动是通过system call socket来进行实现的

驱动程序可以通过 resource_*() 函数对配置文件进行修改
FreeBSD 3.0版本之后引入了一种新的总线方式newbus，它的设计目的是提供一种更加面向对象的方法来管理系统提供的各种各样的总线和设备



BIOS-->MBR-->BL-->加载内核-->设定运行等级-->init-->加载内核模块-->执行不同运行级别的脚本程序-->执行/etc/rc.d/rc.local-->执行/bin/login
grub  systemd

Linux与C源码阅读：
https://lxr.missinglinkelectronics.com/linux

Graphviz

/usr/obj/usr/src/sys/MYKERNEL/device_if.h

通过配置FreeBSD ssh远程登录到虚拟机，然后拷贝文件到主机
FreeBSD:
	vi /etc/ssh/sshd_config
	/etc/rc.d/sshd restart
主机登录：
ssh root@192.168.153.128
FreeBSD ip: 192.168.153.128
然后利用scp命令拷贝即可：
scp root@192.168.153.128:/usr/obj/src/sys/MYKERNEL/device_if.h /home/wcg/Desktop

FreeBSD svn:
https://svn.freebsd.org/base/stable/12/


virtualBox: 改成橋接模式，要不然ip地址會比較混亂
	192.168.2.23
