////////////// 20220118 //////////////
  不论是工作还是生活都需要指定短期和长期计划。在当前财富水平相当有限的情况下，要打好财富金字塔的地基，也就是能够
满足当下生活，并且不会被一些意外事件完全打乱生活节奏。目前需要考虑一下事项：
  1、为自己和父母购买医疗、意外保险
  2、经济条件允许的话，趁年轻保存自己的干细胞，为以后可能的疾病做好准备
  3、为自己短期可能需要处理的事情设立基金，然后每个月固定存入相应金额，零存整取(比如结婚)
  4、现在就要为考虑自己的养老问题，靠子女养老的时代已经过去，所以也要为自己额外设立一个养老基金，从现在开始也是每月
    固定存入相应的金额。数额可以比短期事务少一些，但是一定要持续不断的投入，因为复利率的效果会随着时间的推移慢慢显示
    出威力
  5、从现在或者孩子出生之后，要为孩子设立教育基金。目标就是在孩子18岁要进入大学的时候，这笔基金能够完全支付其学费和
    生活费
  6、当前阶段，生活中一定要减少一些非必要的消费，比如少跟朋友出去吃一顿大餐、少换一款最新发布的手机、少买一些穿不到
    的衣服等等。但是对于家人的关爱一定不能少，有些钱是必须要花的，比如给女朋友买生日礼物、日常化妆品等。然后将这些
    省下的钱放到对应的基金当中
  7、对于孩子的教育一定要以培养其争取的人生观、价值观为重点，给他们留一大笔钱是没有任何用处的。需要让他们从小就意识到
    财富和劳动的重要性。比如小孩子在具有一定的动手能力之后，父母不能直接拿钱买完送给孩子，而是只给他们一部分的钱，剩下
    的钱就需要他们自己通过劳动去获得，扫地洗碗丢垃圾都可以折算为一部分钱
  8、等财富基本盘稳定之后，再去考虑更高收益的理财，比例大致为 5：3：2。做完上述事情之后，手头剩余资金的50%作为存款，保证
    日常生活开销；30%作为低风险投资，追求低回报率但是比较稳定的收益；剩余20%可以尝试投资中高风险的基金和股票

  
////////////// 20220119 //////////////
  root@qemu:/tpt # mv a.tmp7c836de a
  root@qemu:/tpt # ls -al
  total 18014398509481984
  drwxr-xr-x  2 root  wheel   1024 Jan 19 06:28 .
  drwxr-xr-x  2 root  wheel   1024 Jan 19 06:28 ..
  -rwxr-xr-x  1 root  wheel  16352 Jan 19 06:28 a.tmp7c836de
  -rw-r--r--  1 root  wheel     76 Jan 19 06:27 hello.c
  root@qemu:/tpt # mv a.tmp7c836de b

  clang 编译的最后会将中间文件重名民为目标文件名，这里很可能是重命名出现了问题。TptRename() 函数传入的参数：
    (gdb) p ap
    $1 = (vop_rename_args *) 0xffffffc0771b37e8
    (gdb) p* ap
    $2 = {
      a_gen = {
        a_desc = 0xffffffc0008e53e0 <vop_rename_desc>
      },
      a_fdvp = 0xffffffd009f245b8,
      a_fvp = 0xffffffd009fd2b70,
      a_fcnp = 0xffffffc0771b3a28,
      a_tdvp = 0xffffffd009f245b8,
      a_tvp = 0x0,
      a_tcnp = 0xffffffc0771b3958
    }
    (gdb) p ap->a_fcnp 
    $3 = (componentname *) 0xffffffc0771b3a28
    (gdb) p* ap->a_fcnp 
    $4 = {
      cn_origflags = 18446743798888027648,
      cn_flags = 285476880,
      cn_thread = 0xffffffc0035c5600,
      cn_cred = 0xffffffd005692500,
      cn_nameiop = DELETE,
      cn_lkflags = 268699664,
      cn_pnbuf = 0xffffffd005452800 "a.tmp0161721",
      cn_nameptr = 0xffffffd005452800 "a.tmp0161721",
      cn_namelen = 12
    }
    (gdb) p ap->a_tcnp 
    $5 = (componentname *) 0xffffffc0771b3958
    (gdb) p* ap->a_tcnp 
    $6 = {
      cn_origflags = 72057594037927937,
      cn_flags = 285740045,
      cn_thread = 0xffffffc0035c5600,
      cn_cred = 0xffffffd005692500,
      cn_nameiop = RENAME,
      cn_lkflags = 268961805,
      cn_pnbuf = 0xffffffd0054a4800 "a",
      cn_nameptr = 0xffffffd0054a4800 "a",
      cn_namelen = 1
    }

  出现这种情况还是名称匹配的问题，代码实现中传入的 namelen 出现了错误。本来我们想要匹配的是长度为n的字符串 a***，
结果传入的 namelen=1，此时 a 也是可以成功匹配的。所以就把链表中的a节点给删除了，造成了文件系统的混乱


////////////// 20220120 //////////////
  目前 tptfs 可以通过路径信息找到文件对应的数据结构信息。以后当我们把所有的文件都注册到GR之后，当一个线程第一次已经通过绝对路径信息
得到对应的文件 object id 之后，以后如果要访问同样的文件，应该就不需要再通过计算绝对路径去查找了，而是可以直接用 id 找到对应的文件类。
那这是不是意味着需要为文件访问重新设计一套基于 GR 的访问接口，而不再使用 syscall？但是好像文件描述符就具备这样的功能。。。